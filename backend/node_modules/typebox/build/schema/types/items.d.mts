import { type XSchema, type XSchemaLike } from './schema.mjs';
export interface XItemsSized<Items extends XSchemaLike[] = XSchemaLike[]> {
    items: Items;
}
export interface XItemsUnsized<Items extends XSchemaLike = XSchemaLike> {
    items: Items;
}
export interface XItems<Items extends (XSchemaLike | XSchemaLike[]) = (XSchemaLike | XSchemaLike[])> {
    items: Items;
}
/**
 * Returns true if the schema contains a valid items property
 * @specification Json Schema 7
 */
export declare function IsItems(schema: XSchema): schema is XItems;
/** Returns true if this schema is a sized items variant */
export declare function IsItemsSized(schema: XSchema): schema is XItemsSized;
/** Returns true if this schema is a unsized items variant */
export declare function IsItemsUnsized(schema: XSchema): schema is XItemsUnsized;
