export declare function And(left: string, right: string): string;
export declare function Or(left: string, right: string): string;
export declare function Not(expr: string): string;
/** Returns true if this value is an array */
export declare function IsArray(value: string): string;
/** Returns true if this value is an async iterator */
export declare function IsAsyncIterator(value: unknown): string;
/** Returns true if this value is bigint */
export declare function IsBigInt(value: string): string;
/** Returns true if this value is a boolean */
export declare function IsBoolean(value: string): string;
/** Returns true if this value is integer */
export declare function IsInteger(value: string): string;
/** Returns true if this value is an iterator */
export declare function IsIterator(value: unknown): string;
/** Returns true if this value is null */
export declare function IsNull(value: string): string;
/** Returns true if this value is number */
export declare function IsNumber(value: string): string;
/** Returns true if this value is an object but not an array */
export declare function IsObjectNotArray(value: string): string;
/** Returns true if this value is an object */
export declare function IsObject(value: string): string;
/** Returns true if this value is string */
export declare function IsString(value: string): string;
/** Returns true if this value is symbol */
export declare function IsSymbol(value: string): string;
/** Returns true if this value is undefined */
export declare function IsUndefined(value: string): string;
export declare function IsFunction(value: unknown): string;
export declare function IsConstructor(value: unknown): string;
export declare function IsEqual(left: string, right: string): string;
export declare function IsGreaterThan(left: string, right: string): string;
export declare function IsLessThan(left: string, right: string): string;
export declare function IsLessEqualThan(left: string, right: string): string;
export declare function IsGreaterEqualThan(left: string, right: string): string;
export declare function StringGraphemeCount(value: string): string;
export declare function Every(value: string, offset: string, params: [value: string, index: string], expression: string): string;
export declare function Entries(value: string): string;
export declare function Keys(value: string): string;
export declare function HasPropertyKey(value: string, key: string): string;
export declare function IsDeepEqual(left: string, right: string): string;
export declare function ArrayLiteral(elements: string[]): string;
export declare function ArrowFunction(parameters: string[], body: string): string;
export declare function Call(value: string, arguments_: string[]): string;
export declare function New(value: string, arguments_: string[]): string;
export declare function Member(left: string, right: string): string;
export declare function Constant(value: bigint | boolean | null | number | string | undefined): string;
export declare function Ternary(condition: string, true_: string, false_: string): string;
export declare function Statements(statements: string[]): string;
export declare function ConstDeclaration(identifier: string, expression: string): string;
export declare function If(condition: string, then: string): string;
export declare function Return(expression: string): string;
export declare function ReduceAnd(operands: string[]): string;
export declare function ReduceOr(operands: string[]): string;
export declare function PrefixIncrement(expression: string): string;
export declare function MultipleOf(dividend: string, divisor: string): string;
