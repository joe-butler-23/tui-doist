import { Compile } from 'typebox/compile';
import { Value } from 'typebox/value';
export * from 'typebox';
export const TypeBoxValidatorCompiler = ({ schema, httpPart }) => {
    const typeCheck = Compile(schema);
    return (value) => {
        const converted = httpPart === 'body' ? value : Value.Convert(schema, value);
        if (typeCheck.Check(converted)) {
            return { value: converted };
        }
        const errors = [];
        for (const error of typeCheck.Errors(converted)) {
            errors.push({
                message: error.message,
                instancePath: error.instancePath
            });
        }
        return {
            error: errors
        };
    };
};
